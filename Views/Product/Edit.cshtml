@model StoreModels.ProductModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Product</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ID" />
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" type="number"class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label> Category: </label><br /><br />
                <select name="CategoryId" required oninvalid="this.setCustomValidity('Please select Category')" oninput="setCustomValidity('')">
                    <option></option>
                    @foreach (var item in (List<StoreModels.CategoryModel>)ViewData["CategoryList"])
                    {
                        <option value="@item.ID">@item.Name</option>
                    }
                </select>
                @*<span asp-validation-for="CategoryID" class="text-danger"></span>*@
                <br />
                <br />
            </div>
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" class="btn btn-primary">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
